trigger: 'none'

pool:
  vmImage: ubuntu-latest

stages:
  - stage: "Build"
    displayName: "Build"
    jobs:
      -  job: "Test"
         displayName: "Test App"
         steps:

           - task: SonarCloudPrepare@1
             displayName: "SonarCloud Analysis Preparation"
             enabled: false
             inputs:
               SonarCloud: 'SonarSconn'
               organization: 'mydemoado1'
               scannerMode: 'Other'
               extraProperties: |
                 # Additional properties that will be passed to the scanner, 
                 # Put one key=value per line, example:
                 # sonar.exclusions=**/*.bin
                 
                 sonar.projectKey=MyDemoADO_SpringBoot-NodeJs
                 sonar.projectName=SpringBoot-NodeJs
                 sonar.scanner.metadataFilePath=$(Agent.TempDirectory)/sonar/$(Build.BuildNumber)/test/report-task.txt
                
              

           - task: Maven@4
             displayName: "Maven Test with Junit and Code Coverage with JaCoCo"
             enabled: false
             inputs:
               mavenPomFile: 'pom.xml'
               goals: 'clean test'
               publishJUnitResults: false
               codeCoverageToolOption: 'JaCoCo'
               javaHomeOption: 'JDKVersion'
               mavenVersionOption: 'Default'
               mavenAuthenticateFeed: false
               effectivePomSkip: false
               sonarQubeRunAnalysis: true
               sqMavenPluginVersionChoice: 'latest'

           - task: CopyFiles@2
             enabled: false
             inputs:
               SourceFolder: '$(System.DefaultWorkingDirectory)'
               Contents: '**/surefire-reports/TEST-*.xml'
               TargetFolder: '$(Build.ArtifactStagingDirectory)' 


           - task: PowerShell@2
             enabled: false
             displayName: "Check Test Pass Percentage"
             inputs:
               targetType: 'inline'
               script: |
                 [xml]$xml= Get-Content $(build.artifactstagingdirectory)\target\surefire-reports\TEST-com.devsecops.NumericApplicationTests.xml
                 $failures= $xml.testsuite.failures
                 $tests= $xml.testsuite.tests
                 $passpercent=[Math]::Abs(($failures/$tests - 1)*100)
                 
                 $passpercent
                 
                 If($passpercent -lt 90)
                 {
                 Write-host "Threshold Breached.Exit 1"
                 EXIT 1
                 }
                 

           - task: BuildQualityChecks@9
             enabled: false
             displayName: "Check Code Coverage Percentage"
             inputs:
               checkCoverage: true
               coverageFailOption: 'fixed'
               coverageType: 'lines'
               coverageThreshold: '60'


           - task: PublishTestResults@2
             enabled: false
             displayName: "Publish Unit Test Results"
             inputs:
               testResultsFormat: 'JUnit'
               testResultsFiles: '**/surefire-reports/TEST-*.xml'
               failTaskOnFailedTests: true


           - task: SonarCloudPublish@1
             enabled: false
             displayName: "SonarCloud Quality Gate Result"
             inputs:
               pollingTimeoutSec: '300'

           - task: sonarcloud-buildbreaker@2
             enabled: false
             displayName: "Build Breaker if QG fails"
             inputs:
               SonarCloud: 'SonarSconn'
               organization: 'mydemoado1'
           
           - task: dependency-check-build-task@6
             continueOnError: true
             inputs:
               projectName: 'MyScan'
               scanPath: '$(System.DefaultWorkingDirectory)/src/'
               format: 'ALL'
               failOnCVSS: '5'
               reportsDirectory: '$(Build.ArtifactStagingDirectory)'
               

           - task: PublishTestResults@2
             inputs:
               testResultsFormat: 'JUnit'
               testResultsFiles: '*dependency-check-junit.xml'
               searchFolder: '$(Build.ArtifactStagingDirectory)'
               testRunTitle: 'Dependency Test'

      - job: "Package"
        displayName: "Package into .war file"
        dependsOn: 'Test'
        steps:
          - task: Maven@4
            enabled: false
            displayName: "Package it in its distributable format"
            inputs:
               mavenPomFile: 'pom.xml'
               goals: 'clean package'
               options: '-DskipTests=true'
               publishJUnitResults: false
               javaHomeOption: 'JDKVersion'
               mavenVersionOption: 'Default'
               mavenAuthenticateFeed: false
               effectivePomSkip: false
               sonarQubeRunAnalysis: false

          - task: CopyFiles@2
            enabled: false
            inputs:
               SourceFolder: '$(System.DefaultWorkingDirectory)'
               Contents: '**/numeric-0.0.1.jar'
               TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            enabled: false
            inputs:
               PathtoPublish: '$(Build.ArtifactStagingDirectory)/target'
               ArtifactName: 'drop'
               publishLocation: 'Container'

          - task: UniversalPackages@0
            enabled: false
            inputs:
               command: 'publish'
               publishDirectory: '$(Build.ArtifactStagingDirectory)/target/'
               feedsToUsePublish: 'internal'
               vstsFeedPublish: '545dde5f-5bea-4cde-8e74-74e78a4710b3/337d99bd-18b3-4cd6-984f-b3c7f5ef2812'
               vstsFeedPackagePublish: 'numeric.jar'
               versionOption: 'patch'


  - stage: "Deployment"
    dependsOn: "Build"
    displayName: "Deployment"
    jobs:
      

      - job: "Approval"
        pool: server

        steps:
          
          - task: ManualValidation@0
            timeoutInMinutes: 1
            displayName: "Deployment Validation"
            inputs:
              notifyUsers: 'aniket.p.deshmukh@gmail.com'
              instructions: 'Please validate the build $(Build.BuildId) configuration and resume'


      - job: "Test_Deployment"
        displayName: "Deployment to Test Env"
        dependsOn: "Approval"
        steps:
          - task: CmdLine@2
            inputs:
              script: 'echo Test Env'